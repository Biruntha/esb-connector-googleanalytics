<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->

<!-- Method Documentation URL: https://developers.google.com/analytics/devguides/config/mgmt/v3/mgmtReference/management/accounts/list -->
<template name="updateWebPropertyUserLinks" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="accountId" description="Account ID to retrieve the views."/>
    <parameter name="webPropertyId" description="Returns response with indentations and line breaks."/>
    <parameter name="id" description="The maximum number of views to include in this response"/>
    <parameter name="linkId" description="The maximum number of views to include in this response"/>
    <parameter name="selfLink" description="The starting index of the resources."/>
    <parameter name="kind" description="The starting index of the resources."/>
    <parameter name="fields" description="option results in response."/>
    <parameter name="permissions" description="The starting index of the resources."/>
    <parameter name="userRef" description="option results in response."/>

    <sequence>
        <property name="uri.var.accountId" expression="$func:accountId"/>
        <property name="uri.var.webPropertyId" expression="$func:webPropertyId"/>
        <property name="uri.var.linkId" expression="$func:linkId"/>
        <property name="uri.var.id" expression="$func:id"/>
        <property name="uri.var.selfLink" expression="$func:selfLink"/>
        <property name="uri.var.kind" expression="$func:kind"/>
        <property name="uri.var.permissions" expression="$func:permissions"/>
        <property name="uri.var.userRef" expression="$func:userRef"/>
        <property name="uri.var.apiParameters" value=""/>
        <property name="uri.var.fields" expression="$func:fields"/>

        <payloadFactory media-type="json">
            <format>
                {
                "permissions":$1,
                "userRef":$2
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.permissions')"/>
                <arg expression="get-property('uri.var.userRef')"/>
            </args>
        </payloadFactory>
        <script language="js">
            <![CDATA[
            var id = mc.getProperty('uri.var.id');
            var selfLink = mc.getProperty('uri.var.selfLink');
            var kind = mc.getProperty('uri.var.kind');

            var jsonPayload = mc.getPayloadJSON();
            var urlQuery = '';
            if (id != null && id != "") {
               urlQuery += 'id=' + id + '&';
            }
            if (selfLink != null && selfLink != "") {
               urlQuery += 'selfLink=' + selfLink + '&';
            }
            if (kind != null && kind != "") {
               urlQuery += 'kind=' + kind + '&';
            }

            // Add a leading '?' and remove the trailing '&'
            if (urlQuery != "") {
               urlQuery = '?' + urlQuery.substring(0, urlQuery.length - 1);
               mc.setProperty('uri.var.urlQuery', urlQuery);
            }
            mc.setPayloadJSON(jsonPayload);
         ]]>
        </script>
        <filter xpath="(not(get-property('uri.var.fields') = '' or (not(string(get-property('uri.var.fields'))))))">
            <then>
                <property name="uri.var.apiParameters"
                          expression="fn:concat(get-property('uri.var.apiParameters'),'fields=',get-property('uri.var.fields'))"/>
            </then>
        </filter>

        <call>
            <endpoint>
                <http method="Post"
                      uri-template="{+uri.var.apiUrl}/analytics/v3/management/accounts/{+uri.var.accountId}/webproperties/{+uri.var.webPropertyId}/entityUserLinks/{+uri.var.linkId}?{+uri.var.apiParameters}"/>
            </endpoint>
        </call>
        <property name="uri.var.statusCode" expression="$axis2:HTTP_SC"/>
        <!-- If the call fails with 401 Unauthorized, then get a new access token by calling getAccessTokenFromRefreshToken
           method. -->
        <filter xpath="get-property('uri.var.statusCode') = 401 and get-property('uri.var.refreshTokenNegotiated') = 'false'">
            <then>
                <googleanalytics.getAccessTokenFromRefreshToken/>
                <header name="Authorization" expression="fn:concat('Bearer ', get-property('uri.var.accessToken'))"
                        scope="transport"/>
                <googleanalytics.updateWebPropertyUserLinks/>
            </then>
        </filter>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-Frame-Options" action="remove" scope="transport"/>
        <header name="Expires" action="remove" scope="transport"/>
        <header name="X-XSS-Protection" action="remove" scope="transport"/>
        <header name="Alternate-Protocol" action="remove" scope="transport"/>
        <header name="X-Content-Type-Options" action="remove" scope="transport"/>
        <header name="Alt-Svc" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="Pragma" action="remove" scope="transport"/>
    </sequence>
</template>
